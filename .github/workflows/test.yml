name: Test Action

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build action
        run: npm run build

      - name: Check if dist is up to date
        run: |
          if [ -n "$(git status --porcelain dist)" ]; then
            echo "dist/ is not up to date. Please run 'npm run build' and commit the changes."
            git status --porcelain dist
            exit 1
          fi

  test-action:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create test coverage data
        run: |
          mkdir -p test-coverage/apps/frontend
          mkdir -p test-coverage/apps/backend
          
          # Create mock LCOV file
          cat > test-coverage/apps/frontend/lcov.info << 'EOF'
          TN:
          SF:src/app.js
          FN:1,main
          FNF:1
          FNH:1
          FNDA:1,main
          DA:1,1
          DA:2,1
          DA:3,0
          LF:3
          LH:2
          BRF:0
          BRH:0
          end_of_record
          EOF
          
          # Create mock JSON summary
          cat > test-coverage/apps/backend/coverage-summary.json << 'EOF'
          {
            "total": {
              "lines": { "total": 100, "covered": 85, "pct": 85 },
              "functions": { "total": 20, "covered": 18, "pct": 90 },
              "statements": { "total": 100, "covered": 85, "pct": 85 },
              "branches": { "total": 50, "covered": 40, "pct": 80 }
            }
          }
          EOF

      - name: Test action
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-folder: './test-coverage'
          comment-title: 'Test Coverage Report'
          minimum-coverage: 0
